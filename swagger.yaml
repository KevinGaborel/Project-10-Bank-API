swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for fetching a user transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successully
          schema:
            $ref: '#/definitions/Transactions'
        '400':
          description: No account
        '500':
          description: Internal Server Error
  /transactions/{idAccount}:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for fetching a transactions for 1 account by id
      parameters:
        - in: path
          name: idAccount
          type: number
          description: id of the transactions account to view
          required: true
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionsAccount'
        '400':
          description: No account
        '500':
          description: Internal Server Error
  /transactions/{idAccount}/{idTransaction}:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for add infos a transaction
      parameters:
        - in: path
          name: idAccount
          type: number
          description: id of the transactions account
          required: true
        - in: path
          name: idTransaction
          type: number
          description: id of the transaction to add infos
          required: true
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: add transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionObject'
      produces:
        - application/json
      responses:
        '200':
          description: User transactions add infos successully
          schema:
            $ref: '#/definitions/TransactionsAccount'
        '400':
          description: No account
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for updating a transaction
      parameters:
        - in: path
          name: idAccount
          type: number
          description: id of the transactions account to update
          required: true
        - in: path
          name: idTransaction
          type: number
          description: id of the transaction to update
          required: true
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionObject'
      produces:
        - application/json
      responses:
        '200':
          description: User transactions changed successully
          schema:
            $ref: '#/definitions/TransactionsAccount'
        '400':
          description: No account
        '500':
          description: Internal Server Error
  /transactions/{idAccount}/{idTransaction}/{attribute}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for delete infos a transaction
      parameters:
        - in: path
          name: idAccount
          type: number
          description: id of the transactions account
          required: true
        - in: path
          name: idTransaction
          type: number
          description: id of the transaction to delete infos
          required: true
        - in: path
          name: attribute
          type: string
          description: transaction attribute to delete
          required: true
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User transactions delete infos successully
          schema:
            $ref: '#/definitions/TransactionsAccount'
        '400':
          description: No account
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transactions:
    type: object
    properties:
      status:
        type: number
      checking:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            accountName: 
              type: string
            value:
              type: number
      savings:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            accountName: 
              type: string
            value:
              type: number
      creditCard:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            accountName: 
              type: string
            value:
              type: number
  TransactionsAccount:
    type: object
    properties:
      status:
        type: number
      account:
        type: object
        properties:
          accountName:
            type: string
          value:
            type: number
          id:
            type: number
      transactions:
        type: array
        items:
          type: object
          properties:
            transactionId:
              type: number
            date: 
              type: string
            description:
              type: string
            amount:
              type: number
            balance:
              type: number
            transactionType: 
              type: string
            category:
              type: string
            notes:
              type:
                string
  TransactionObject:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string